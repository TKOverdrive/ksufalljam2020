[gd_scene load_steps=7 format=2]

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeTexture" id=5]
source = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeColorFunc" id=7]

[sub_resource type="VisualShader" id=2]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0 = vec3(SCREEN_UV, 0.0);

// Input:3

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out5p0.xy, 0.0);
		n_out4p0 = _tex_read.rgb;
		n_out4p1 = _tex_read.a;
	}

// ColorFunc:6
	vec3 n_out6p0;
	{
		vec3 c = n_out4p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out6p0 = vec3(max3, max3, max3);
	}

// Output:0
	COLOR.rgb = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -470.592, 0 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 920, 140 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -440, 220 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 60, 40 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -400, 120 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 460, 120 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 2, 5, 0, 4, 0, 4, 0, 6, 0, 6, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[node name="EffectsLayer" type="CanvasLayer"]

[node name="Grayscale" type="ColorRect" parent="."]
visible = false
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}
